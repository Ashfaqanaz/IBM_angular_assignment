{"ast":null,"code":"import { select } from '@ngrx/store';\nimport { selectCoffees } from './state/coffees.selectors';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./coffee-list/coffees.service\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"@angular/common\";\n\nfunction AppComponent_ul_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\")(1, \"li\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1);\n  }\n}\n\nexport class AppComponent {\n  // store: Store;\n  // exp: Observable<Coffee>;\n  constructor(coffeesService, store) {\n    this.coffeesService = coffeesService;\n    this.store = store;\n    this.title = 'IBM_angular_project';\n    this.coffees$ = this.store.pipe(select(selectCoffees));\n  }\n\n  ngOnInit() {\n    this.store.dispatch({\n      type: '[Coffee List/API] Retrieve Coffees Success'\n    }); // console.log(this.coffees$.subscribe(\n    // (coffees: Coffee[]) => this. \n    // ));\n    // console.log(this.coffees$.forEach(\n    // ));\n\n    console.log(this.coffees$); // this.store.next()\n\n    this.store.subscribe( // (_value) => console.log(_value)\n    state => {\n      console.log(state);\n    });\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.coffeeService), i0.ɵɵdirectiveInject(i2.Store));\n};\n\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 7,\n  vars: 5,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Coffee Collection\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\");\n      i0.ɵɵtext(3, \" Coffees: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, AppComponent_ul_4_Template, 3, 1, \"ul\", 0);\n      i0.ɵɵpipe(5, \"keyvalue\");\n      i0.ɵɵpipe(6, \"async\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(5, 1, i0.ɵɵpipeBind1(6, 3, ctx.coffees$)));\n    }\n  },\n  dependencies: [i3.NgForOf, i3.AsyncPipe, i3.KeyValuePipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AACA,SAASA,MAAT,QAA8B,aAA9B;AACA,SAASC,aAAT,QAA8B,2BAA9B;;;;;;;;ICIAC,2BAAqD,CAArD,EAAqD,IAArD;IAEQA;IAAQA;;;;;IAARA;IAAAA;;;;ADKR,OAAM,MAAOC,YAAP,CAAmB;EAGvB;EAEA;EACAC,YACUC,cADV,EAEUC,KAFV,EAEsB;IADZ;IACA;IAPV,aAAQ,qBAAR;IAWA,gBAAW,KAAKA,KAAL,CAAWC,IAAX,CAAgBP,MAAM,CAACC,aAAD,CAAtB,CAAX;EAFC;;EAKDO,QAAQ;IACN,KAAKF,KAAL,CAAWG,QAAX,CAAoB;MAAEC,IAAI,EAAE;IAAR,CAApB,EADM,CAEN;IACE;IACF;IACA;IAEA;;IAEAC,OAAO,CAACC,GAAR,CAAY,KAAKC,QAAjB,EATM,CAWN;;IAEA,KAAKP,KAAL,CAAWQ,SAAX,EACE;IACCC,KAAD,IAAU;MACRJ,OAAO,CAACC,GAAR,CAAYG,KAAZ;IACD,CAJH;EAWD;;AAvCsB;;;mBAAZZ,cAAYD;AAAA;;;QAAZC;EAAYa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCbzBlB;MAAIA;MAAiBA;MAIpBA;MAAMA;MAASA;MAEhBA;;;;;;MAAqBA;MAAAA","names":["select","selectCoffees","i0","AppComponent","constructor","coffeesService","store","pipe","ngOnInit","dispatch","type","console","log","coffees$","subscribe","state","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/ashfaqanaz/Documents/IBM_angular_assignment/src/app/app.component.ts","/Users/ashfaqanaz/Documents/IBM_angular_assignment/src/app/app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { selectCoffees } from './state/coffees.selectors';\nimport { coffeeService } from './coffee-list/coffees.service';\nimport { Observable } from 'rxjs';\nimport { Coffee } from './coffee-list/coffees.model';\nimport { __values } from 'tslib';\nimport { state } from '@angular/animations';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent implements OnInit{\n  title = 'IBM_angular_project';\n\n  // store: Store;\n  \n  // exp: Observable<Coffee>;\n  constructor(\n    private coffeesService: coffeeService,\n    private store: Store,\n  ) {\n  }\n\n  coffees$ = this.store.pipe(select(selectCoffees));\n\n\n  ngOnInit() {\n    this.store.dispatch({ type: '[Coffee List/API] Retrieve Coffees Success' });\n    // console.log(this.coffees$.subscribe(\n      // (coffees: Coffee[]) => this. \n    // ));\n    // console.log(this.coffees$.forEach(\n      \n    // ));\n\n    console.log(this.coffees$);\n\n    // this.store.next()\n\n    this.store.subscribe(\n      // (_value) => console.log(_value)\n      (state) => {\n        console.log(state);\n      }\n    )\n\n\n\n\n\n  }\n}\n\n\n/*\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at https://github.com/ngrx/platform\n*/","<h1>Coffee Collection</h1>\n\n <!-- <app-coffee-list class=\"coffee-list\" [coffees]=\"coffees$ |async\"></app-coffee-list> -->\n\n <div> Coffees: </div>\n\n<ul *ngFor=\"let item of coffees$ | async | keyvalue\">\n    <!-- <li>{{item.key}}: {{item.value}}</li> -->\n    <li>{{item}}</li>\n</ul>\n\n<!-- <pre>{{ coffees$ | json }}</pre> -->\n\n<!-- \nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at https://github.com/ngrx/platform\n-->"]},"metadata":{},"sourceType":"module"}