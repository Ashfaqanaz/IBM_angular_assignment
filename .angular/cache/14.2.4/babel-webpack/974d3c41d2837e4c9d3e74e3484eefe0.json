{"ast":null,"code":"import { Store } from '@ngrx/store';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./coffee-list/coffees.service\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"@angular/common\";\nexport class AppComponent {\n  constructor(coffeesService, store) {\n    this.coffeesService = coffeesService;\n    this.store = store;\n    this.title = 'IBM_angular_project';\n    this.coffeeList = undefined;\n    this.coffeeSubscription = this.store.subscribe(state => {\n      this.coffeeList = state;\n      console.log(state);\n    });\n  }\n\n  ngOnInit() {\n    this.store.dispatch({\n      type: '[Coffee List/API] Retrieve Coffees Success'\n    });\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.coffeeService), i0.ɵɵdirectiveInject(i2.Store));\n};\n\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 5,\n  vars: 3,\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Coffee Collection\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3);\n      i0.ɵɵpipe(4, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 1, ctx.coffeeList));\n    }\n  },\n  dependencies: [i3.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AACA,SAAiBA,KAAjB,QAA8B,aAA9B;;;;;AAaA,OAAM,MAAOC,YAAP,CAAmB;EAGvBC,YACUC,cADV,EAEYC,KAFZ,EAEwB;IADd;IACE;IAJZ,aAAQ,qBAAR;IAOA,kBAAaC,SAAb;IACA,0BAAqB,KAAKD,KAAL,CAAWE,SAAX,CAClBC,KAAD,IAAU;MACR,KAAKC,UAAL,GAAgBD,KAAhB;MACAE,OAAO,CAACC,GAAR,CAAYH,KAAZ;IACD,CAJkB,CAArB;EAHI;;EAUJI,QAAQ;IACN,KAAKP,KAAL,CAAWQ,QAAX,CAAoB;MAAEC,IAAI,EAAE;IAAR,CAApB;EACD;;AAlBsB;;;mBAAZZ,cAAYa;AAAA;;;QAAZb;EAAYc;EAAAC;EAAAC;EAAAC;IAAA;MCdzBJ;MAAIA;MAAiBA;MAcrBA;MAAGA;;MAAwBA;;;;MAAxBA;MAAAA","names":["Store","AppComponent","constructor","coffeesService","store","undefined","subscribe","state","coffeeList","console","log","ngOnInit","dispatch","type","i0","selectors","decls","vars","template"],"sourceRoot":"","sources":["/Users/ashfaqanaz/Documents/IBM_angular_assignment/src/app/app.component.ts","/Users/ashfaqanaz/Documents/IBM_angular_assignment/src/app/app.component.html"],"sourcesContent":["import { Component, Inject, Injectable, Injector, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { selectCoffees } from './state/coffees.selectors';\nimport { coffeeService } from './coffee-list/coffees.service';\nimport { Observable } from 'rxjs';\nimport { Coffee } from './coffee-list/coffees.model';\nimport { __values } from 'tslib';\nimport { state } from '@angular/animations';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\n\nexport class AppComponent implements OnInit{\n  title = 'IBM_angular_project';\n\n  constructor(\n    private coffeesService: coffeeService,\n    protected store: Store\n  ) {}\n\n  coffeeList = undefined;\n  coffeeSubscription = this.store.subscribe(\n    (state) => {\n      this.coffeeList=state;\n      console.log(state); \n    }\n  )\n\n  ngOnInit() {\n    this.store.dispatch({ type: '[Coffee List/API] Retrieve Coffees Success' });\n  }\n}\n\n\n/*\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at https://github.com/ngrx/platform\n*/","<h1>Coffee Collection</h1>\n\n<!-- <div *ngFor=\"let i of coffeeList | keyvalue\" >\n    <div *ngFor=\"let j of i | keyvalue\">\n        <div *ngFor=\"let k of j.value | keyvalue\">\n            <div *ngFor=\"let l of k.value | keyvalue\">\n                <div *ngFor=\"let m of l.value | keyvalue\">\n                    <pre>{{m.key}}:{{m.value}}</pre>\n                </div>\n            </div>\n        </div>\n    </div>\n</div> -->\n\n<p>{{ coffeeList | async }}</p>\n\n<!-- \nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at https://github.com/ngrx/platform\n-->"]},"metadata":{},"sourceType":"module"}